name: "Setup cloud credentials"
description: "Setup cloud credentials"
inputs:
  aws_assume_role:
    description: AWS IAM Role for which to fetch credentials.
  aws_region:
    description: Which AWS region to use
  service_account:
    description: Email address or unique identifier of the Google Cloud service account for which to impersonate and generate credentials.
  workload_identity_provider:
    description: The full GCP identifier of the Workload Identity Provider, including the project number, pool name, and provider name. If provided, this must be the full identifier which includes all parts
  step:
    description: 'CI step that assumes permissions, must be 1 or 2 words split by "_". Or color of infra [GREEN, RED]'

runs:
  using: "composite"
  steps: 
    - name: Authenticate with AWS Cloud
      if: github.repository == 'epam/ecc-aws-rulepack'
      uses: aws-actions/configure-aws-credentials@v4
      with:
        role-to-assume: ${{ inputs.aws_assume_role }}
        role-session-name: ECC-RULEPACK-CI-${{ inputs.step }}
        role-duration-seconds: 43200 
        aws-region: ${{ inputs.aws_region }}
        mask-aws-account-id: true
    - name: Authenticate with Google Cloud
      if: github.repository == 'epam/ecc-gcp-rulepack'
      uses: google-github-actions/auth@v2
      with:
          service_account: ${{ inputs.service_account }}
          workload_identity_provider: ${{ inputs.workload_identity_provider }}
          token_format: 'access_token'
    - name: 'Set up Cloud SDK'
      if: github.repository == 'epam/ecc-gcp-rulepack'
      uses: 'google-github-actions/setup-gcloud@v2'
    - uses: actions/setup-node@v2
      if: github.repository == 'epam/ecc-gcp-rulepack'
      with:
        node-version: '20'
    - uses: hashicorp/setup-terraform@v3
      if: github.repository == 'epam/ecc-gcp-rulepack'
      with:
        terraform_version: "1.5.0"
